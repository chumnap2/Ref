// ======================================================================
// \title  RefTopologyAc.cpp
// \author Generated by fpp-to-cpp
// \brief  cpp file for Ref topology
// ======================================================================

#include "Ref/Top/RefTopologyAc.hpp"

// ----------------------------------------------------------------------
// Component instances
// ----------------------------------------------------------------------

namespace CdhCore {

  Svc::CommandDispatcher cmdDisp(FW_OPTIONAL_NAME("cmdDisp"));

}

namespace CdhCore {

  Svc::EventManager events(FW_OPTIONAL_NAME("events"));

}

namespace CdhCore {

  Svc::AssertFatalAdapter fatalAdapter(FW_OPTIONAL_NAME("fatalAdapter"));

}

namespace CdhCore {

  Svc::FatalHandler fatalHandler(FW_OPTIONAL_NAME("fatalHandler"));

}

namespace CdhCore {

  Svc::Health health(FW_OPTIONAL_NAME("health"));

}

namespace CdhCore {

  Svc::PassiveTextLogger textLogger(FW_OPTIONAL_NAME("textLogger"));

}

namespace CdhCore {

  Svc::TlmChan tlmSend(FW_OPTIONAL_NAME("tlmSend"));

}

namespace CdhCore {

  Svc::Version version(FW_OPTIONAL_NAME("version"));

}

namespace ComCcsds {

  Svc::Ccsds::ApidManager apidManager(FW_OPTIONAL_NAME("apidManager"));

}

namespace ComCcsds {

  Svc::ComQueue comQueue(FW_OPTIONAL_NAME("comQueue"));

}

namespace ComCcsds {

  Svc::ComStub comStub(FW_OPTIONAL_NAME("comStub"));

}

namespace ComCcsds {

  Svc::BufferManager commsBufferManager(FW_OPTIONAL_NAME("commsBufferManager"));

}

namespace ComCcsds {

  Svc::FprimeRouter fprimeRouter(FW_OPTIONAL_NAME("fprimeRouter"));

}

namespace ComCcsds {

  Svc::FrameAccumulator frameAccumulator(FW_OPTIONAL_NAME("frameAccumulator"));

}

namespace ComCcsds {

  Svc::Ccsds::SpacePacketDeframer spacePacketDeframer(FW_OPTIONAL_NAME("spacePacketDeframer"));

}

namespace ComCcsds {

  Svc::Ccsds::SpacePacketFramer spacePacketFramer(FW_OPTIONAL_NAME("spacePacketFramer"));

}

namespace ComCcsds {

  Svc::Ccsds::TcDeframer tcDeframer(FW_OPTIONAL_NAME("tcDeframer"));

}

namespace ComCcsds {

  Svc::Ccsds::TmFramer tmFramer(FW_OPTIONAL_NAME("tmFramer"));

}

namespace DataProducts {

  Svc::BufferManager dpBufferManager(FW_OPTIONAL_NAME("dpBufferManager"));

}

namespace DataProducts {

  Svc::DpCatalog dpCat(FW_OPTIONAL_NAME("dpCat"));

}

namespace DataProducts {

  Svc::DpManager dpMgr(FW_OPTIONAL_NAME("dpMgr"));

}

namespace DataProducts {

  Svc::DpWriter dpWriter(FW_OPTIONAL_NAME("dpWriter"));

}

namespace FileHandling {

  Svc::FileDownlink fileDownlink(FW_OPTIONAL_NAME("fileDownlink"));

}

namespace FileHandling {

  Svc::FileManager fileManager(FW_OPTIONAL_NAME("fileManager"));

}

namespace FileHandling {

  Svc::FileUplink fileUplink(FW_OPTIONAL_NAME("fileUplink"));

}

namespace FileHandling {

  Svc::PrmDb prmDb(FW_OPTIONAL_NAME("prmDb"));

}

namespace Ref {

  Ref::SignalGen SG1(FW_OPTIONAL_NAME("SG1"));

}

namespace Ref {

  Ref::SignalGen SG2(FW_OPTIONAL_NAME("SG2"));

}

namespace Ref {

  Ref::SignalGen SG3(FW_OPTIONAL_NAME("SG3"));

}

namespace Ref {

  Ref::SignalGen SG4(FW_OPTIONAL_NAME("SG4"));

}

namespace Ref {

  Ref::SignalGen SG5(FW_OPTIONAL_NAME("SG5"));

}

namespace Ref {

  Ref::BlockDriver blockDrv(FW_OPTIONAL_NAME("blockDrv"));

}

namespace Ref {

  Svc::CmdSequencer cmdSeq(FW_OPTIONAL_NAME("cmdSeq"));

}

namespace Ref {

  Drv::TcpClient comDriver(FW_OPTIONAL_NAME("comDriver"));

}

namespace Ref {

  Ref::DpDemo dpDemo(FW_OPTIONAL_NAME("dpDemo"));

}

namespace Ref {

  Svc::LinuxTimer linuxTimer(FW_OPTIONAL_NAME("linuxTimer"));

}

namespace Ref {

  Ref::PingReceiver pingRcvr(FW_OPTIONAL_NAME("pingRcvr"));

}

namespace Ref {

  Svc::PosixTime posixTime(FW_OPTIONAL_NAME("posixTime"));

}

namespace Ref {

  Svc::ActiveRateGroup rateGroup1Comp(FW_OPTIONAL_NAME("rateGroup1Comp"));

}

namespace Ref {

  Svc::ActiveRateGroup rateGroup2Comp(FW_OPTIONAL_NAME("rateGroup2Comp"));

}

namespace Ref {

  Svc::ActiveRateGroup rateGroup3Comp(FW_OPTIONAL_NAME("rateGroup3Comp"));

}

namespace Ref {

  Svc::RateGroupDriver rateGroupDriverComp(FW_OPTIONAL_NAME("rateGroupDriverComp"));

}

namespace Ref {

  Ref::RecvBuff recvBuffComp(FW_OPTIONAL_NAME("recvBuffComp"));

}

namespace Ref {

  Ref::SendBuff sendBuffComp(FW_OPTIONAL_NAME("sendBuffComp"));

}

namespace Ref {

  Svc::SystemResources systemResources(FW_OPTIONAL_NAME("systemResources"));

}

namespace Ref {

  Ref::TypeDemo typeDemo(FW_OPTIONAL_NAME("typeDemo"));

}

namespace Ref {

  // ----------------------------------------------------------------------
  // Component configuration objects
  // ----------------------------------------------------------------------

  namespace ConfigObjects {

    namespace CdhCore_health {
      Svc::Health::PingEntry pingEntries[NUM_PING_ENTRIES] = {
        {
          PingEntries::CdhCore_cmdDisp::WARN,
          PingEntries::CdhCore_cmdDisp::FATAL,
          "CdhCore_cmdDisp"
        },
        {
          PingEntries::CdhCore_events::WARN,
          PingEntries::CdhCore_events::FATAL,
          "CdhCore_events"
        },
        {
          PingEntries::CdhCore_tlmSend::WARN,
          PingEntries::CdhCore_tlmSend::FATAL,
          "CdhCore_tlmSend"
        },
        {
          PingEntries::DataProducts_dpCat::WARN,
          PingEntries::DataProducts_dpCat::FATAL,
          "DataProducts_dpCat"
        },
        {
          PingEntries::FileHandling_fileDownlink::WARN,
          PingEntries::FileHandling_fileDownlink::FATAL,
          "FileHandling_fileDownlink"
        },
        {
          PingEntries::FileHandling_fileManager::WARN,
          PingEntries::FileHandling_fileManager::FATAL,
          "FileHandling_fileManager"
        },
        {
          PingEntries::FileHandling_fileUplink::WARN,
          PingEntries::FileHandling_fileUplink::FATAL,
          "FileHandling_fileUplink"
        },
        {
          PingEntries::FileHandling_prmDb::WARN,
          PingEntries::FileHandling_prmDb::FATAL,
          "FileHandling_prmDb"
        },
        {
          PingEntries::Ref_blockDrv::WARN,
          PingEntries::Ref_blockDrv::FATAL,
          "Ref_blockDrv"
        },
        {
          PingEntries::Ref_cmdSeq::WARN,
          PingEntries::Ref_cmdSeq::FATAL,
          "Ref_cmdSeq"
        },
        {
          PingEntries::Ref_pingRcvr::WARN,
          PingEntries::Ref_pingRcvr::FATAL,
          "Ref_pingRcvr"
        },
        {
          PingEntries::Ref_rateGroup1Comp::WARN,
          PingEntries::Ref_rateGroup1Comp::FATAL,
          "Ref_rateGroup1Comp"
        },
        {
          PingEntries::Ref_rateGroup2Comp::WARN,
          PingEntries::Ref_rateGroup2Comp::FATAL,
          "Ref_rateGroup2Comp"
        },
        {
          PingEntries::Ref_rateGroup3Comp::WARN,
          PingEntries::Ref_rateGroup3Comp::FATAL,
          "Ref_rateGroup3Comp"
        },
      };
    }

    namespace ComCcsds_commsBufferManager {
      Svc::BufferManager::BufferBins bins;
    }

    namespace ComCcsds_frameAccumulator {
      Svc::FrameDetectors::CcsdsTcFrameDetector frameDetector;
    }

    namespace DataProducts_dpBufferManager {
      Svc::BufferManager::BufferBins bins;
    }

  }

  // ----------------------------------------------------------------------
  // Helper functions
  // ----------------------------------------------------------------------

  void initComponents(const TopologyState& state) {
    CdhCore::cmdDisp.init(QueueSizes::CdhCore_cmdDisp, InstanceIds::CdhCore_cmdDisp);
    CdhCore::events.init(QueueSizes::CdhCore_events, InstanceIds::CdhCore_events);
    CdhCore::fatalAdapter.init(InstanceIds::CdhCore_fatalAdapter);
    CdhCore::fatalHandler.init(InstanceIds::CdhCore_fatalHandler);
    CdhCore::health.init(QueueSizes::CdhCore_health, InstanceIds::CdhCore_health);
    CdhCore::textLogger.init(InstanceIds::CdhCore_textLogger);
    CdhCore::tlmSend.init(QueueSizes::CdhCore_tlmSend, InstanceIds::CdhCore_tlmSend);
    CdhCore::version.init(InstanceIds::CdhCore_version);
    ComCcsds::apidManager.init(InstanceIds::ComCcsds_apidManager);
    ComCcsds::comQueue.init(QueueSizes::ComCcsds_comQueue, InstanceIds::ComCcsds_comQueue);
    ComCcsds::comStub.init(InstanceIds::ComCcsds_comStub);
    ComCcsds::commsBufferManager.init(InstanceIds::ComCcsds_commsBufferManager);
    ComCcsds::fprimeRouter.init(InstanceIds::ComCcsds_fprimeRouter);
    ComCcsds::frameAccumulator.init(InstanceIds::ComCcsds_frameAccumulator);
    ComCcsds::spacePacketDeframer.init(InstanceIds::ComCcsds_spacePacketDeframer);
    ComCcsds::spacePacketFramer.init(InstanceIds::ComCcsds_spacePacketFramer);
    ComCcsds::tcDeframer.init(InstanceIds::ComCcsds_tcDeframer);
    ComCcsds::tmFramer.init(InstanceIds::ComCcsds_tmFramer);
    DataProducts::dpBufferManager.init(InstanceIds::DataProducts_dpBufferManager);
    DataProducts::dpCat.init(QueueSizes::DataProducts_dpCat, InstanceIds::DataProducts_dpCat);
    DataProducts::dpMgr.init(QueueSizes::DataProducts_dpMgr, InstanceIds::DataProducts_dpMgr);
    DataProducts::dpWriter.init(QueueSizes::DataProducts_dpWriter, InstanceIds::DataProducts_dpWriter);
    FileHandling::fileDownlink.init(QueueSizes::FileHandling_fileDownlink, InstanceIds::FileHandling_fileDownlink);
    FileHandling::fileManager.init(QueueSizes::FileHandling_fileManager, InstanceIds::FileHandling_fileManager);
    FileHandling::fileUplink.init(QueueSizes::FileHandling_fileUplink, InstanceIds::FileHandling_fileUplink);
    FileHandling::prmDb.init(QueueSizes::FileHandling_prmDb, InstanceIds::FileHandling_prmDb);
    Ref::SG1.init(QueueSizes::Ref_SG1, InstanceIds::Ref_SG1);
    Ref::SG2.init(QueueSizes::Ref_SG2, InstanceIds::Ref_SG2);
    Ref::SG3.init(QueueSizes::Ref_SG3, InstanceIds::Ref_SG3);
    Ref::SG4.init(QueueSizes::Ref_SG4, InstanceIds::Ref_SG4);
    Ref::SG5.init(QueueSizes::Ref_SG5, InstanceIds::Ref_SG5);
    Ref::blockDrv.init(QueueSizes::Ref_blockDrv, InstanceIds::Ref_blockDrv);
    Ref::cmdSeq.init(QueueSizes::Ref_cmdSeq, InstanceIds::Ref_cmdSeq);
    Ref::comDriver.init(InstanceIds::Ref_comDriver);
    Ref::dpDemo.init(QueueSizes::Ref_dpDemo, InstanceIds::Ref_dpDemo);
    Ref::linuxTimer.init(InstanceIds::Ref_linuxTimer);
    Ref::pingRcvr.init(QueueSizes::Ref_pingRcvr, InstanceIds::Ref_pingRcvr);
    Ref::posixTime.init(InstanceIds::Ref_posixTime);
    Ref::rateGroup1Comp.init(QueueSizes::Ref_rateGroup1Comp, InstanceIds::Ref_rateGroup1Comp);
    Ref::rateGroup2Comp.init(QueueSizes::Ref_rateGroup2Comp, InstanceIds::Ref_rateGroup2Comp);
    Ref::rateGroup3Comp.init(QueueSizes::Ref_rateGroup3Comp, InstanceIds::Ref_rateGroup3Comp);
    Ref::rateGroupDriverComp.init(InstanceIds::Ref_rateGroupDriverComp);
    Ref::recvBuffComp.init(InstanceIds::Ref_recvBuffComp);
    Ref::sendBuffComp.init(QueueSizes::Ref_sendBuffComp, InstanceIds::Ref_sendBuffComp);
    Ref::systemResources.init(InstanceIds::Ref_systemResources);
    Ref::typeDemo.init(InstanceIds::Ref_typeDemo);
  }

  void configComponents(const TopologyState& state) {
    // Health is supplied a set of ping entires.
    CdhCore::health.setPingEntries(
        ConfigObjects::CdhCore_health::pingEntries,
        FW_NUM_ARRAY_ELEMENTS(ConfigObjects::CdhCore_health::pingEntries),
        ConfigConstants::CdhCore_health::HEALTH_WATCHDOG_CODE
    );
    // Startup TLM and Config verbosity for Versions
    CdhCore::version.config(true);
    using namespace ComCcsds;
    Svc::ComQueue::QueueConfigurationTable configurationTable;

    // Events (highest-priority)
    configurationTable.entries[Ports_ComPacketQueue::EVENTS].depth = ComCcsdsConfig::QueueDepths::events;
    configurationTable.entries[Ports_ComPacketQueue::EVENTS].priority = ComCcsdsConfig::QueuePriorities::events;

    // Telemetry
    configurationTable.entries[Ports_ComPacketQueue::TELEMETRY].depth = ComCcsdsConfig::QueueDepths::tlm;
    configurationTable.entries[Ports_ComPacketQueue::TELEMETRY].priority = ComCcsdsConfig::QueuePriorities::tlm;

    // File Downlink Queue (buffer queue using NUM_CONSTANTS offset)
    configurationTable.entries[Ports_ComPacketQueue::NUM_CONSTANTS + Ports_ComBufferQueue::FILE].depth = ComCcsdsConfig::QueueDepths::file;
    configurationTable.entries[Ports_ComPacketQueue::NUM_CONSTANTS + Ports_ComBufferQueue::FILE].priority = ComCcsdsConfig::QueuePriorities::file;

    // Allocation identifier is 0 as the MallocAllocator discards it
    ComCcsds::comQueue.configure(configurationTable, 0, ComCcsds::Allocation::memAllocator);
    memset(&ConfigObjects::ComCcsds_commsBufferManager::bins, 0, sizeof(ConfigObjects::ComCcsds_commsBufferManager::bins));
    ConfigObjects::ComCcsds_commsBufferManager::bins.bins[0].bufferSize = ComCcsdsConfig::BuffMgr::commsBuffSize;
    ConfigObjects::ComCcsds_commsBufferManager::bins.bins[0].numBuffers = ComCcsdsConfig::BuffMgr::commsBuffCount;
    ConfigObjects::ComCcsds_commsBufferManager::bins.bins[1].bufferSize = ComCcsdsConfig::BuffMgr::commsFileBuffSize;
    ConfigObjects::ComCcsds_commsBufferManager::bins.bins[1].numBuffers = ComCcsdsConfig::BuffMgr::commsFileBuffCount;
    ComCcsds::commsBufferManager.setup(
        ComCcsdsConfig::BuffMgr::commsBuffMgrId,
        0,
        ComCcsds::Allocation::memAllocator,
        ConfigObjects::ComCcsds_commsBufferManager::bins
    );
    ComCcsds::frameAccumulator.configure(
        ConfigObjects::ComCcsds_frameAccumulator::frameDetector,
        1,
        ComCcsds::Allocation::memAllocator,
        ComCcsdsConfig::BuffMgr::frameAccumulatorSize
    );
    memset(&ConfigObjects::DataProducts_dpBufferManager::bins, 0, sizeof(ConfigObjects::DataProducts_dpBufferManager::bins));
    ConfigObjects::DataProducts_dpBufferManager::bins.bins[0].bufferSize = DataProductsConfig::BuffMgr::dpBufferStoreSize;
    ConfigObjects::DataProducts_dpBufferManager::bins.bins[0].numBuffers = DataProductsConfig::BuffMgr::dpBufferStoreCount;
    DataProducts::dpBufferManager.setup(
        DataProductsConfig::BuffMgr::dpBufferManagerId,
        0,
        DataProducts::Allocation::memAllocator,
        ConfigObjects::DataProducts_dpBufferManager::bins
    );
    Fw::FileNameString dpDir(DataProductsConfig::Paths::dpDir);
    Fw::FileNameString dpState(DataProductsConfig::Paths::dpState);
    Os::FileSystem::createDirectory(dpDir.toChar());
    DataProducts::dpCat.configure(&dpDir,1,dpState,0, DataProducts::Allocation::memAllocator);
    DataProducts::dpWriter.configure(dpDir);
    FileHandling::fileDownlink.configure(
        FileHandlingConfig::DownlinkConfig::timeout,
        FileHandlingConfig::DownlinkConfig::cooldown,
        FileHandlingConfig::DownlinkConfig::cycleTime,
        FileHandlingConfig::DownlinkConfig::fileQueueDepth
    );
    FileHandling::prmDb.configure("PrmDb.dat");
  }

  void setBaseIds() {
    Ref::dpDemo.setIdBase(BaseIds::Ref_dpDemo);
    CdhCore::cmdDisp.setIdBase(BaseIds::CdhCore_cmdDisp);
    CdhCore::events.setIdBase(BaseIds::CdhCore_events);
    CdhCore::health.setIdBase(BaseIds::CdhCore_health);
    CdhCore::version.setIdBase(BaseIds::CdhCore_version);
    CdhCore::textLogger.setIdBase(BaseIds::CdhCore_textLogger);
    CdhCore::fatalAdapter.setIdBase(BaseIds::CdhCore_fatalAdapter);
    CdhCore::tlmSend.setIdBase(BaseIds::CdhCore_tlmSend);
    CdhCore::fatalHandler.setIdBase(BaseIds::CdhCore_fatalHandler);
    ComCcsds::comQueue.setIdBase(BaseIds::ComCcsds_comQueue);
    ComCcsds::frameAccumulator.setIdBase(BaseIds::ComCcsds_frameAccumulator);
    ComCcsds::commsBufferManager.setIdBase(BaseIds::ComCcsds_commsBufferManager);
    ComCcsds::fprimeRouter.setIdBase(BaseIds::ComCcsds_fprimeRouter);
    ComCcsds::comStub.setIdBase(BaseIds::ComCcsds_comStub);
    ComCcsds::tcDeframer.setIdBase(BaseIds::ComCcsds_tcDeframer);
    ComCcsds::spacePacketDeframer.setIdBase(BaseIds::ComCcsds_spacePacketDeframer);
    ComCcsds::tmFramer.setIdBase(BaseIds::ComCcsds_tmFramer);
    ComCcsds::spacePacketFramer.setIdBase(BaseIds::ComCcsds_spacePacketFramer);
    ComCcsds::apidManager.setIdBase(BaseIds::ComCcsds_apidManager);
    DataProducts::dpCat.setIdBase(BaseIds::DataProducts_dpCat);
    DataProducts::dpMgr.setIdBase(BaseIds::DataProducts_dpMgr);
    DataProducts::dpWriter.setIdBase(BaseIds::DataProducts_dpWriter);
    DataProducts::dpBufferManager.setIdBase(BaseIds::DataProducts_dpBufferManager);
    FileHandling::fileUplink.setIdBase(BaseIds::FileHandling_fileUplink);
    FileHandling::fileDownlink.setIdBase(BaseIds::FileHandling_fileDownlink);
    FileHandling::fileManager.setIdBase(BaseIds::FileHandling_fileManager);
    FileHandling::prmDb.setIdBase(BaseIds::FileHandling_prmDb);
    Ref::blockDrv.setIdBase(BaseIds::Ref_blockDrv);
    Ref::rateGroup1Comp.setIdBase(BaseIds::Ref_rateGroup1Comp);
    Ref::rateGroup2Comp.setIdBase(BaseIds::Ref_rateGroup2Comp);
    Ref::rateGroup3Comp.setIdBase(BaseIds::Ref_rateGroup3Comp);
    Ref::pingRcvr.setIdBase(BaseIds::Ref_pingRcvr);
    Ref::typeDemo.setIdBase(BaseIds::Ref_typeDemo);
    Ref::cmdSeq.setIdBase(BaseIds::Ref_cmdSeq);
    Ref::sendBuffComp.setIdBase(BaseIds::Ref_sendBuffComp);
    Ref::SG1.setIdBase(BaseIds::Ref_SG1);
    Ref::SG2.setIdBase(BaseIds::Ref_SG2);
    Ref::SG3.setIdBase(BaseIds::Ref_SG3);
    Ref::SG4.setIdBase(BaseIds::Ref_SG4);
    Ref::SG5.setIdBase(BaseIds::Ref_SG5);
    Ref::posixTime.setIdBase(BaseIds::Ref_posixTime);
    Ref::rateGroupDriverComp.setIdBase(BaseIds::Ref_rateGroupDriverComp);
    Ref::recvBuffComp.setIdBase(BaseIds::Ref_recvBuffComp);
    Ref::systemResources.setIdBase(BaseIds::Ref_systemResources);
    Ref::linuxTimer.setIdBase(BaseIds::Ref_linuxTimer);
    Ref::comDriver.setIdBase(BaseIds::Ref_comDriver);
  }

  void connectComponents() {

    // ComCcsds_CdhCore
    CdhCore::cmdDisp.set_seqCmdStatus_OutputPort(
        0,
        ComCcsds::fprimeRouter.get_cmdResponseIn_InputPort(0)
    );
    CdhCore::cmdDisp.set_seqCmdStatus_OutputPort(
        1,
        Ref::cmdSeq.get_cmdResponseIn_InputPort(0)
    );
    CdhCore::events.set_PktSend_OutputPort(
        0,
        ComCcsds::comQueue.get_comPacketQueueIn_InputPort(0)
    );
    CdhCore::tlmSend.set_PktSend_OutputPort(
        0,
        ComCcsds::comQueue.get_comPacketQueueIn_InputPort(1)
    );
    ComCcsds::fprimeRouter.set_commandOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_seqCmdBuff_InputPort(0)
    );
    Ref::cmdSeq.set_comCmdOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_seqCmdBuff_InputPort(1)
    );

    // ComCcsds_FileHandling
    ComCcsds::comQueue.set_bufferReturnOut_OutputPort(
        0,
        FileHandling::fileDownlink.get_bufferReturn_InputPort(0)
    );
    ComCcsds::fprimeRouter.set_fileOut_OutputPort(
        0,
        FileHandling::fileUplink.get_bufferSendIn_InputPort(0)
    );
    FileHandling::fileDownlink.set_bufferSendOut_OutputPort(
        0,
        ComCcsds::comQueue.get_bufferQueueIn_InputPort(0)
    );
    FileHandling::fileUplink.set_bufferSendOut_OutputPort(
        0,
        ComCcsds::fprimeRouter.get_fileBufferReturnIn_InputPort(0)
    );

    // Command
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        0,
        CdhCore::cmdDisp.get_CmdDisp_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        1,
        CdhCore::events.get_CmdDisp_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        2,
        CdhCore::health.get_CmdDisp_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        3,
        CdhCore::version.get_cmdIn_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        4,
        DataProducts::dpCat.get_CmdDisp_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        5,
        DataProducts::dpMgr.get_cmdIn_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        6,
        DataProducts::dpWriter.get_cmdIn_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        7,
        FileHandling::fileDownlink.get_cmdIn_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        8,
        FileHandling::fileManager.get_cmdIn_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        9,
        FileHandling::prmDb.get_CmdDisp_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        10,
        Ref::SG1.get_cmdIn_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        11,
        Ref::SG2.get_cmdIn_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        12,
        Ref::SG3.get_cmdIn_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        13,
        Ref::SG4.get_cmdIn_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        14,
        Ref::SG5.get_cmdIn_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        15,
        Ref::cmdSeq.get_cmdIn_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        16,
        Ref::dpDemo.get_cmdIn_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        17,
        Ref::pingRcvr.get_CmdDisp_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        18,
        Ref::recvBuffComp.get_CmdDisp_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        19,
        Ref::sendBuffComp.get_CmdDisp_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        20,
        Ref::systemResources.get_CmdDisp_InputPort(0)
    );
    CdhCore::cmdDisp.set_compCmdSend_OutputPort(
        21,
        Ref::typeDemo.get_cmdIn_InputPort(0)
    );

    // CommandRegistration
    CdhCore::cmdDisp.set_CmdReg_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(0)
    );
    CdhCore::events.set_CmdReg_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(1)
    );
    CdhCore::health.set_CmdReg_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(2)
    );
    CdhCore::version.set_cmdRegOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(3)
    );
    DataProducts::dpCat.set_CmdReg_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(4)
    );
    DataProducts::dpMgr.set_cmdRegIn_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(5)
    );
    DataProducts::dpWriter.set_cmdRegIn_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(6)
    );
    FileHandling::fileDownlink.set_cmdRegOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(7)
    );
    FileHandling::fileManager.set_cmdRegOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(8)
    );
    FileHandling::prmDb.set_CmdReg_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(9)
    );
    Ref::SG1.set_cmdRegOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(10)
    );
    Ref::SG2.set_cmdRegOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(11)
    );
    Ref::SG3.set_cmdRegOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(12)
    );
    Ref::SG4.set_cmdRegOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(13)
    );
    Ref::SG5.set_cmdRegOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(14)
    );
    Ref::cmdSeq.set_cmdRegOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(15)
    );
    Ref::dpDemo.set_cmdRegOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(16)
    );
    Ref::pingRcvr.set_CmdReg_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(17)
    );
    Ref::recvBuffComp.set_CmdReg_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(18)
    );
    Ref::sendBuffComp.set_CmdReg_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(19)
    );
    Ref::systemResources.set_CmdReg_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(20)
    );
    Ref::typeDemo.set_cmdRegOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdReg_InputPort(21)
    );

    // CommandResponse
    CdhCore::cmdDisp.set_CmdStatus_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    CdhCore::events.set_CmdStatus_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    CdhCore::health.set_CmdStatus_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    CdhCore::version.set_cmdResponseOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    DataProducts::dpCat.set_CmdStatus_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    DataProducts::dpMgr.set_cmdResponseOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    DataProducts::dpWriter.set_cmdResponseOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    FileHandling::fileDownlink.set_cmdResponseOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    FileHandling::fileManager.set_cmdResponseOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    FileHandling::prmDb.set_CmdStatus_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    Ref::SG1.set_cmdResponseOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    Ref::SG2.set_cmdResponseOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    Ref::SG3.set_cmdResponseOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    Ref::SG4.set_cmdResponseOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    Ref::SG5.set_cmdResponseOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    Ref::cmdSeq.set_cmdResponseOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    Ref::dpDemo.set_cmdResponseOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    Ref::pingRcvr.set_CmdStatus_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    Ref::recvBuffComp.set_CmdStatus_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    Ref::sendBuffComp.set_CmdStatus_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    Ref::systemResources.set_CmdStatus_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );
    Ref::typeDemo.set_cmdResponseOut_OutputPort(
        0,
        CdhCore::cmdDisp.get_compCmdStat_InputPort(0)
    );

    // Communications
    ComCcsds::comStub.set_drvReceiveReturnOut_OutputPort(
        0,
        Ref::comDriver.get_recvReturnIn_InputPort(0)
    );
    ComCcsds::comStub.set_drvSendOut_OutputPort(
        0,
        Ref::comDriver.get_send_InputPort(0)
    );
    Ref::comDriver.set_allocate_OutputPort(
        0,
        ComCcsds::commsBufferManager.get_bufferGetCallee_InputPort(0)
    );
    Ref::comDriver.set_deallocate_OutputPort(
        0,
        ComCcsds::commsBufferManager.get_bufferSendIn_InputPort(0)
    );
    Ref::comDriver.set_ready_OutputPort(
        0,
        ComCcsds::comStub.get_drvConnected_InputPort(0)
    );
    Ref::comDriver.set_recv_OutputPort(
        0,
        ComCcsds::comStub.get_drvReceiveIn_InputPort(0)
    );

    // DataProducts
    DataProducts::dpMgr.set_bufferGetOut_OutputPort(
        0,
        DataProducts::dpBufferManager.get_bufferGetCallee_InputPort(0)
    );
    DataProducts::dpMgr.set_productSendOut_OutputPort(
        0,
        DataProducts::dpWriter.get_bufferSendIn_InputPort(0)
    );
    DataProducts::dpWriter.set_deallocBufferSendOut_OutputPort(
        0,
        DataProducts::dpBufferManager.get_bufferSendIn_InputPort(0)
    );

    // Downlink
    ComCcsds::comQueue.set_dataOut_OutputPort(
        0,
        ComCcsds::spacePacketFramer.get_dataIn_InputPort(0)
    );
    ComCcsds::comStub.set_comStatusOut_OutputPort(
        0,
        ComCcsds::tmFramer.get_comStatusIn_InputPort(0)
    );
    ComCcsds::comStub.set_dataReturnOut_OutputPort(
        0,
        ComCcsds::tmFramer.get_dataReturnIn_InputPort(0)
    );
    ComCcsds::spacePacketFramer.set_bufferAllocate_OutputPort(
        0,
        ComCcsds::commsBufferManager.get_bufferGetCallee_InputPort(0)
    );
    ComCcsds::spacePacketFramer.set_bufferDeallocate_OutputPort(
        0,
        ComCcsds::commsBufferManager.get_bufferSendIn_InputPort(0)
    );
    ComCcsds::spacePacketFramer.set_comStatusOut_OutputPort(
        0,
        ComCcsds::comQueue.get_comStatusIn_InputPort(0)
    );
    ComCcsds::spacePacketFramer.set_dataOut_OutputPort(
        0,
        ComCcsds::tmFramer.get_dataIn_InputPort(0)
    );
    ComCcsds::spacePacketFramer.set_dataReturnOut_OutputPort(
        0,
        ComCcsds::comQueue.get_dataReturnIn_InputPort(0)
    );
    ComCcsds::spacePacketFramer.set_getApidSeqCount_OutputPort(
        0,
        ComCcsds::apidManager.get_getApidSeqCountIn_InputPort(0)
    );
    ComCcsds::tmFramer.set_comStatusOut_OutputPort(
        0,
        ComCcsds::spacePacketFramer.get_comStatusIn_InputPort(0)
    );
    ComCcsds::tmFramer.set_dataOut_OutputPort(
        0,
        ComCcsds::comStub.get_dataIn_InputPort(0)
    );
    ComCcsds::tmFramer.set_dataReturnOut_OutputPort(
        0,
        ComCcsds::spacePacketFramer.get_dataReturnIn_InputPort(0)
    );

    // Events
    CdhCore::cmdDisp.set_Log_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    CdhCore::events.set_Log_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    CdhCore::fatalAdapter.set_Log_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    CdhCore::health.set_Log_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    CdhCore::version.set_logOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    ComCcsds::apidManager.set_logOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    ComCcsds::comQueue.set_Log_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    ComCcsds::commsBufferManager.set_eventOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    ComCcsds::fprimeRouter.set_logOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    ComCcsds::frameAccumulator.set_logOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    ComCcsds::spacePacketDeframer.set_logOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    ComCcsds::spacePacketFramer.set_logOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    ComCcsds::tcDeframer.set_logOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    ComCcsds::tmFramer.set_logOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    DataProducts::dpBufferManager.set_eventOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    DataProducts::dpCat.set_Log_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    DataProducts::dpMgr.set_eventOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    DataProducts::dpWriter.set_eventOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    FileHandling::fileDownlink.set_eventOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    FileHandling::fileManager.set_eventOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    FileHandling::fileUplink.set_eventOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    FileHandling::prmDb.set_Log_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    Ref::SG1.set_logOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    Ref::SG2.set_logOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    Ref::SG3.set_logOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    Ref::SG4.set_logOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    Ref::SG5.set_logOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    Ref::cmdSeq.set_logOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    Ref::dpDemo.set_logOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    Ref::pingRcvr.set_Log_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    Ref::rateGroup1Comp.set_Log_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    Ref::rateGroup2Comp.set_Log_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    Ref::rateGroup3Comp.set_Log_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    Ref::recvBuffComp.set_Log_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    Ref::sendBuffComp.set_Log_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    Ref::systemResources.set_Log_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );
    Ref::typeDemo.set_logOut_OutputPort(
        0,
        CdhCore::events.get_LogRecv_InputPort(0)
    );

    // FaultProtection
    CdhCore::events.set_FatalAnnounce_OutputPort(
        0,
        CdhCore::fatalHandler.get_FatalReceive_InputPort(0)
    );

    // FileHandling_DataProducts
    DataProducts::dpCat.set_fileOut_OutputPort(
        0,
        FileHandling::fileDownlink.get_SendFile_InputPort(0)
    );
    FileHandling::fileDownlink.set_FileComplete_OutputPort(
        0,
        DataProducts::dpCat.get_fileDone_InputPort(0)
    );

    // Health
    CdhCore::cmdDisp.set_pingOut_OutputPort(
        0,
        CdhCore::health.get_PingReturn_InputPort(0)
    );
    CdhCore::events.set_pingOut_OutputPort(
        0,
        CdhCore::health.get_PingReturn_InputPort(1)
    );
    CdhCore::health.set_PingSend_OutputPort(
        0,
        CdhCore::cmdDisp.get_pingIn_InputPort(0)
    );
    CdhCore::health.set_PingSend_OutputPort(
        1,
        CdhCore::events.get_pingIn_InputPort(0)
    );
    CdhCore::health.set_PingSend_OutputPort(
        2,
        CdhCore::tlmSend.get_pingIn_InputPort(0)
    );
    CdhCore::health.set_PingSend_OutputPort(
        3,
        DataProducts::dpCat.get_pingIn_InputPort(0)
    );
    CdhCore::health.set_PingSend_OutputPort(
        4,
        FileHandling::fileDownlink.get_pingIn_InputPort(0)
    );
    CdhCore::health.set_PingSend_OutputPort(
        5,
        FileHandling::fileManager.get_pingIn_InputPort(0)
    );
    CdhCore::health.set_PingSend_OutputPort(
        6,
        FileHandling::fileUplink.get_pingIn_InputPort(0)
    );
    CdhCore::health.set_PingSend_OutputPort(
        7,
        FileHandling::prmDb.get_pingIn_InputPort(0)
    );
    CdhCore::health.set_PingSend_OutputPort(
        8,
        Ref::blockDrv.get_PingIn_InputPort(0)
    );
    CdhCore::health.set_PingSend_OutputPort(
        9,
        Ref::cmdSeq.get_pingIn_InputPort(0)
    );
    CdhCore::health.set_PingSend_OutputPort(
        10,
        Ref::pingRcvr.get_PingIn_InputPort(0)
    );
    CdhCore::health.set_PingSend_OutputPort(
        11,
        Ref::rateGroup1Comp.get_PingIn_InputPort(0)
    );
    CdhCore::health.set_PingSend_OutputPort(
        12,
        Ref::rateGroup2Comp.get_PingIn_InputPort(0)
    );
    CdhCore::health.set_PingSend_OutputPort(
        13,
        Ref::rateGroup3Comp.get_PingIn_InputPort(0)
    );
    CdhCore::tlmSend.set_pingOut_OutputPort(
        0,
        CdhCore::health.get_PingReturn_InputPort(2)
    );
    DataProducts::dpCat.set_pingOut_OutputPort(
        0,
        CdhCore::health.get_PingReturn_InputPort(3)
    );
    FileHandling::fileDownlink.set_pingOut_OutputPort(
        0,
        CdhCore::health.get_PingReturn_InputPort(4)
    );
    FileHandling::fileManager.set_pingOut_OutputPort(
        0,
        CdhCore::health.get_PingReturn_InputPort(5)
    );
    FileHandling::fileUplink.set_pingOut_OutputPort(
        0,
        CdhCore::health.get_PingReturn_InputPort(6)
    );
    FileHandling::prmDb.set_pingOut_OutputPort(
        0,
        CdhCore::health.get_PingReturn_InputPort(7)
    );
    Ref::blockDrv.set_PingOut_OutputPort(
        0,
        CdhCore::health.get_PingReturn_InputPort(8)
    );
    Ref::cmdSeq.set_pingOut_OutputPort(
        0,
        CdhCore::health.get_PingReturn_InputPort(9)
    );
    Ref::pingRcvr.set_PingOut_OutputPort(
        0,
        CdhCore::health.get_PingReturn_InputPort(10)
    );
    Ref::rateGroup1Comp.set_PingOut_OutputPort(
        0,
        CdhCore::health.get_PingReturn_InputPort(11)
    );
    Ref::rateGroup2Comp.set_PingOut_OutputPort(
        0,
        CdhCore::health.get_PingReturn_InputPort(12)
    );
    Ref::rateGroup3Comp.set_PingOut_OutputPort(
        0,
        CdhCore::health.get_PingReturn_InputPort(13)
    );

    // Parameters
    ComCcsds::spacePacketDeframer.set_prmGetOut_OutputPort(
        0,
        FileHandling::prmDb.get_getPrm_InputPort(0)
    );
    ComCcsds::spacePacketDeframer.set_prmSetOut_OutputPort(
        0,
        FileHandling::prmDb.get_setPrm_InputPort(0)
    );
    ComCcsds::spacePacketFramer.set_prmGetOut_OutputPort(
        0,
        FileHandling::prmDb.get_getPrm_InputPort(0)
    );
    ComCcsds::spacePacketFramer.set_prmSetOut_OutputPort(
        0,
        FileHandling::prmDb.get_setPrm_InputPort(0)
    );
    ComCcsds::tcDeframer.set_prmGetOut_OutputPort(
        0,
        FileHandling::prmDb.get_getPrm_InputPort(0)
    );
    ComCcsds::tcDeframer.set_prmSetOut_OutputPort(
        0,
        FileHandling::prmDb.get_setPrm_InputPort(0)
    );
    ComCcsds::tmFramer.set_prmGetOut_OutputPort(
        0,
        FileHandling::prmDb.get_getPrm_InputPort(0)
    );
    ComCcsds::tmFramer.set_prmSetOut_OutputPort(
        0,
        FileHandling::prmDb.get_setPrm_InputPort(0)
    );
    Ref::dpDemo.set_prmGetOut_OutputPort(
        0,
        FileHandling::prmDb.get_getPrm_InputPort(0)
    );
    Ref::dpDemo.set_prmSetOut_OutputPort(
        0,
        FileHandling::prmDb.get_setPrm_InputPort(0)
    );
    Ref::recvBuffComp.set_ParamGet_OutputPort(
        0,
        FileHandling::prmDb.get_getPrm_InputPort(0)
    );
    Ref::recvBuffComp.set_ParamSet_OutputPort(
        0,
        FileHandling::prmDb.get_setPrm_InputPort(0)
    );
    Ref::sendBuffComp.set_ParamGet_OutputPort(
        0,
        FileHandling::prmDb.get_getPrm_InputPort(0)
    );
    Ref::sendBuffComp.set_ParamSet_OutputPort(
        0,
        FileHandling::prmDb.get_setPrm_InputPort(0)
    );
    Ref::typeDemo.set_prmGetOut_OutputPort(
        0,
        FileHandling::prmDb.get_getPrm_InputPort(0)
    );
    Ref::typeDemo.set_prmSetOut_OutputPort(
        0,
        FileHandling::prmDb.get_setPrm_InputPort(0)
    );

    // RateGroups
    Ref::linuxTimer.set_CycleOut_OutputPort(
        0,
        Ref::rateGroupDriverComp.get_CycleIn_InputPort(0)
    );
    Ref::rateGroup1Comp.set_RateGroupMemberOut_OutputPort(
        0,
        Ref::SG1.get_schedIn_InputPort(0)
    );
    Ref::rateGroup1Comp.set_RateGroupMemberOut_OutputPort(
        1,
        Ref::SG2.get_schedIn_InputPort(0)
    );
    Ref::rateGroup1Comp.set_RateGroupMemberOut_OutputPort(
        2,
        CdhCore::tlmSend.get_Run_InputPort(0)
    );
    Ref::rateGroup1Comp.set_RateGroupMemberOut_OutputPort(
        3,
        FileHandling::fileDownlink.get_Run_InputPort(0)
    );
    Ref::rateGroup1Comp.set_RateGroupMemberOut_OutputPort(
        4,
        Ref::systemResources.get_run_InputPort(0)
    );
    Ref::rateGroup1Comp.set_RateGroupMemberOut_OutputPort(
        5,
        ComCcsds::comQueue.get_run_InputPort(0)
    );
    Ref::rateGroup2Comp.set_RateGroupMemberOut_OutputPort(
        0,
        Ref::cmdSeq.get_schedIn_InputPort(0)
    );
    Ref::rateGroup2Comp.set_RateGroupMemberOut_OutputPort(
        1,
        Ref::sendBuffComp.get_SchedIn_InputPort(0)
    );
    Ref::rateGroup2Comp.set_RateGroupMemberOut_OutputPort(
        2,
        Ref::SG3.get_schedIn_InputPort(0)
    );
    Ref::rateGroup2Comp.set_RateGroupMemberOut_OutputPort(
        3,
        Ref::SG4.get_schedIn_InputPort(0)
    );
    Ref::rateGroup2Comp.set_RateGroupMemberOut_OutputPort(
        4,
        Ref::dpDemo.get_run_InputPort(0)
    );
    Ref::rateGroup3Comp.set_RateGroupMemberOut_OutputPort(
        0,
        CdhCore::health.get_Run_InputPort(0)
    );
    Ref::rateGroup3Comp.set_RateGroupMemberOut_OutputPort(
        1,
        Ref::SG5.get_schedIn_InputPort(0)
    );
    Ref::rateGroup3Comp.set_RateGroupMemberOut_OutputPort(
        2,
        Ref::blockDrv.get_Sched_InputPort(0)
    );
    Ref::rateGroup3Comp.set_RateGroupMemberOut_OutputPort(
        3,
        ComCcsds::commsBufferManager.get_schedIn_InputPort(0)
    );
    Ref::rateGroup3Comp.set_RateGroupMemberOut_OutputPort(
        4,
        DataProducts::dpBufferManager.get_schedIn_InputPort(0)
    );
    Ref::rateGroup3Comp.set_RateGroupMemberOut_OutputPort(
        5,
        DataProducts::dpWriter.get_schedIn_InputPort(0)
    );
    Ref::rateGroup3Comp.set_RateGroupMemberOut_OutputPort(
        6,
        DataProducts::dpMgr.get_schedIn_InputPort(0)
    );
    Ref::rateGroupDriverComp.set_CycleOut_OutputPort(
        0,
        Ref::rateGroup1Comp.get_CycleIn_InputPort(0)
    );
    Ref::rateGroupDriverComp.set_CycleOut_OutputPort(
        1,
        Ref::rateGroup2Comp.get_CycleIn_InputPort(0)
    );
    Ref::rateGroupDriverComp.set_CycleOut_OutputPort(
        2,
        Ref::rateGroup3Comp.get_CycleIn_InputPort(0)
    );

    // Ref
    DataProducts::dpMgr.set_productResponseOut_OutputPort(
        0,
        Ref::SG1.get_productRecvIn_InputPort(0)
    );
    DataProducts::dpMgr.set_productResponseOut_OutputPort(
        1,
        Ref::dpDemo.get_productRecvIn_InputPort(0)
    );
    Ref::SG1.set_productGetOut_OutputPort(
        0,
        DataProducts::dpMgr.get_productGetIn_InputPort(0)
    );
    Ref::SG1.set_productRequestOut_OutputPort(
        0,
        DataProducts::dpMgr.get_productRequestIn_InputPort(0)
    );
    Ref::SG1.set_productSendOut_OutputPort(
        0,
        DataProducts::dpMgr.get_productSendIn_InputPort(0)
    );
    Ref::blockDrv.set_BufferOut_OutputPort(
        0,
        Ref::recvBuffComp.get_Data_InputPort(0)
    );
    Ref::dpDemo.set_productGetOut_OutputPort(
        0,
        DataProducts::dpMgr.get_productGetIn_InputPort(0)
    );
    Ref::dpDemo.set_productRequestOut_OutputPort(
        0,
        DataProducts::dpMgr.get_productRequestIn_InputPort(0)
    );
    Ref::dpDemo.set_productSendOut_OutputPort(
        0,
        DataProducts::dpMgr.get_productSendIn_InputPort(0)
    );
    Ref::sendBuffComp.set_Data_OutputPort(
        0,
        Ref::blockDrv.get_BufferIn_InputPort(0)
    );

    // Telemetry
    CdhCore::cmdDisp.set_Tlm_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    CdhCore::health.set_Tlm_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    CdhCore::version.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    ComCcsds::comQueue.set_Tlm_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    ComCcsds::commsBufferManager.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    ComCcsds::spacePacketDeframer.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    ComCcsds::spacePacketFramer.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    ComCcsds::tcDeframer.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    ComCcsds::tmFramer.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    DataProducts::dpBufferManager.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    DataProducts::dpCat.set_Tlm_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    DataProducts::dpMgr.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    DataProducts::dpWriter.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    FileHandling::fileDownlink.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    FileHandling::fileManager.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    FileHandling::fileUplink.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    Ref::SG1.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    Ref::SG2.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    Ref::SG3.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    Ref::SG4.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    Ref::SG5.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    Ref::blockDrv.set_Tlm_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    Ref::cmdSeq.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    Ref::dpDemo.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    Ref::pingRcvr.set_Tlm_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    Ref::rateGroup1Comp.set_Tlm_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    Ref::rateGroup2Comp.set_Tlm_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    Ref::rateGroup3Comp.set_Tlm_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    Ref::recvBuffComp.set_Tlm_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    Ref::sendBuffComp.set_Tlm_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    Ref::systemResources.set_Tlm_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );
    Ref::typeDemo.set_tlmOut_OutputPort(
        0,
        CdhCore::tlmSend.get_TlmRecv_InputPort(0)
    );

    // TextEvents
    CdhCore::cmdDisp.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    CdhCore::events.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    CdhCore::fatalAdapter.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    CdhCore::health.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    CdhCore::version.set_logTextOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    ComCcsds::apidManager.set_logTextOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    ComCcsds::comQueue.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    ComCcsds::commsBufferManager.set_textEventOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    ComCcsds::fprimeRouter.set_logTextOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    ComCcsds::frameAccumulator.set_logTextOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    ComCcsds::spacePacketDeframer.set_logTextOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    ComCcsds::spacePacketFramer.set_logTextOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    ComCcsds::tcDeframer.set_logTextOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    ComCcsds::tmFramer.set_logTextOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    DataProducts::dpBufferManager.set_textEventOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    DataProducts::dpCat.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    DataProducts::dpMgr.set_textEventOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    DataProducts::dpWriter.set_textEventOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    FileHandling::fileDownlink.set_textEventOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    FileHandling::fileManager.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    FileHandling::fileUplink.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    FileHandling::prmDb.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    Ref::SG1.set_logTextOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    Ref::SG2.set_logTextOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    Ref::SG3.set_logTextOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    Ref::SG4.set_logTextOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    Ref::SG5.set_logTextOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    Ref::cmdSeq.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    Ref::dpDemo.set_logTextOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    Ref::pingRcvr.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    Ref::rateGroup1Comp.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    Ref::rateGroup2Comp.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    Ref::rateGroup3Comp.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    Ref::recvBuffComp.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    Ref::sendBuffComp.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    Ref::systemResources.set_LogText_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );
    Ref::typeDemo.set_logTextOut_OutputPort(
        0,
        CdhCore::textLogger.get_TextLogger_InputPort(0)
    );

    // Time
    CdhCore::cmdDisp.set_Time_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    CdhCore::events.set_Time_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    CdhCore::fatalAdapter.set_Time_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    CdhCore::health.set_Time_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    CdhCore::version.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    ComCcsds::apidManager.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    ComCcsds::comQueue.set_Time_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    ComCcsds::commsBufferManager.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    ComCcsds::fprimeRouter.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    ComCcsds::frameAccumulator.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    ComCcsds::spacePacketDeframer.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    ComCcsds::spacePacketFramer.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    ComCcsds::tcDeframer.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    ComCcsds::tmFramer.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    DataProducts::dpBufferManager.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    DataProducts::dpCat.set_Time_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    DataProducts::dpMgr.set_timeGetOut_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    DataProducts::dpWriter.set_timeGetOut_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    FileHandling::fileDownlink.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    FileHandling::fileManager.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    FileHandling::fileUplink.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    FileHandling::prmDb.set_Time_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    Ref::SG1.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    Ref::SG2.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    Ref::SG3.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    Ref::SG4.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    Ref::SG5.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    Ref::blockDrv.set_Time_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    Ref::cmdSeq.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    Ref::dpDemo.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    Ref::pingRcvr.set_Time_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    Ref::rateGroup1Comp.set_Time_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    Ref::rateGroup2Comp.set_Time_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    Ref::rateGroup3Comp.set_Time_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    Ref::recvBuffComp.set_Time_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    Ref::sendBuffComp.set_Time_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    Ref::systemResources.set_Time_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );
    Ref::typeDemo.set_timeCaller_OutputPort(
        0,
        Ref::posixTime.get_timeGetPort_InputPort(0)
    );

    // Uplink
    ComCcsds::comStub.set_dataOut_OutputPort(
        0,
        ComCcsds::frameAccumulator.get_dataIn_InputPort(0)
    );
    ComCcsds::fprimeRouter.set_bufferAllocate_OutputPort(
        0,
        ComCcsds::commsBufferManager.get_bufferGetCallee_InputPort(0)
    );
    ComCcsds::fprimeRouter.set_bufferDeallocate_OutputPort(
        0,
        ComCcsds::commsBufferManager.get_bufferSendIn_InputPort(0)
    );
    ComCcsds::fprimeRouter.set_dataReturnOut_OutputPort(
        0,
        ComCcsds::spacePacketDeframer.get_dataReturnIn_InputPort(0)
    );
    ComCcsds::frameAccumulator.set_bufferAllocate_OutputPort(
        0,
        ComCcsds::commsBufferManager.get_bufferGetCallee_InputPort(0)
    );
    ComCcsds::frameAccumulator.set_bufferDeallocate_OutputPort(
        0,
        ComCcsds::commsBufferManager.get_bufferSendIn_InputPort(0)
    );
    ComCcsds::frameAccumulator.set_dataOut_OutputPort(
        0,
        ComCcsds::tcDeframer.get_dataIn_InputPort(0)
    );
    ComCcsds::frameAccumulator.set_dataReturnOut_OutputPort(
        0,
        ComCcsds::comStub.get_dataReturnIn_InputPort(0)
    );
    ComCcsds::spacePacketDeframer.set_dataOut_OutputPort(
        0,
        ComCcsds::fprimeRouter.get_dataIn_InputPort(0)
    );
    ComCcsds::spacePacketDeframer.set_dataReturnOut_OutputPort(
        0,
        ComCcsds::tcDeframer.get_dataReturnIn_InputPort(0)
    );
    ComCcsds::spacePacketDeframer.set_validateApidSeqCount_OutputPort(
        0,
        ComCcsds::apidManager.get_validateApidSeqCountIn_InputPort(0)
    );
    ComCcsds::tcDeframer.set_dataOut_OutputPort(
        0,
        ComCcsds::spacePacketDeframer.get_dataIn_InputPort(0)
    );
    ComCcsds::tcDeframer.set_dataReturnOut_OutputPort(
        0,
        ComCcsds::frameAccumulator.get_dataReturnIn_InputPort(0)
    );
  }

  void regCommands() {
    CdhCore::cmdDisp.regCommands();
    CdhCore::events.regCommands();
    CdhCore::health.regCommands();
    CdhCore::version.regCommands();
    DataProducts::dpCat.regCommands();
    DataProducts::dpMgr.regCommands();
    DataProducts::dpWriter.regCommands();
    FileHandling::fileDownlink.regCommands();
    FileHandling::fileManager.regCommands();
    FileHandling::prmDb.regCommands();
    Ref::SG1.regCommands();
    Ref::SG2.regCommands();
    Ref::SG3.regCommands();
    Ref::SG4.regCommands();
    Ref::SG5.regCommands();
    Ref::cmdSeq.regCommands();
    Ref::dpDemo.regCommands();
    Ref::pingRcvr.regCommands();
    Ref::recvBuffComp.regCommands();
    Ref::sendBuffComp.regCommands();
    Ref::systemResources.regCommands();
    Ref::typeDemo.regCommands();
  }

  void readParameters() {
    FileHandling::prmDb.readParamFile();
  }

  void loadParameters() {
    Ref::recvBuffComp.loadParameters();
    Ref::sendBuffComp.loadParameters();
    Ref::typeDemo.loadParameters();
  }

  void startTasks(const TopologyState& state) {
    CdhCore::cmdDisp.start(
      static_cast<FwTaskPriorityType>(Priorities::CdhCore_cmdDisp),
      static_cast<Os::Task::ParamType>(StackSizes::CdhCore_cmdDisp),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::CdhCore_cmdDisp)
    );
    CdhCore::events.start(
      static_cast<FwTaskPriorityType>(Priorities::CdhCore_events),
      static_cast<Os::Task::ParamType>(StackSizes::CdhCore_events),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::CdhCore_events)
    );
    CdhCore::tlmSend.start(
      static_cast<FwTaskPriorityType>(Priorities::CdhCore_tlmSend),
      static_cast<Os::Task::ParamType>(StackSizes::CdhCore_tlmSend),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::CdhCore_tlmSend)
    );
    ComCcsds::comQueue.start(
      static_cast<FwTaskPriorityType>(Priorities::ComCcsds_comQueue),
      static_cast<Os::Task::ParamType>(StackSizes::ComCcsds_comQueue),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::ComCcsds_comQueue)
    );
    DataProducts::dpCat.start(
      static_cast<FwTaskPriorityType>(Priorities::DataProducts_dpCat),
      static_cast<Os::Task::ParamType>(StackSizes::DataProducts_dpCat),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::DataProducts_dpCat)
    );
    DataProducts::dpMgr.start(
      static_cast<FwTaskPriorityType>(Priorities::DataProducts_dpMgr),
      static_cast<Os::Task::ParamType>(StackSizes::DataProducts_dpMgr),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::DataProducts_dpMgr)
    );
    DataProducts::dpWriter.start(
      static_cast<FwTaskPriorityType>(Priorities::DataProducts_dpWriter),
      static_cast<Os::Task::ParamType>(StackSizes::DataProducts_dpWriter),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::DataProducts_dpWriter)
    );
    FileHandling::fileDownlink.start(
      static_cast<FwTaskPriorityType>(Priorities::FileHandling_fileDownlink),
      static_cast<Os::Task::ParamType>(StackSizes::FileHandling_fileDownlink),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::FileHandling_fileDownlink)
    );
    FileHandling::fileManager.start(
      static_cast<FwTaskPriorityType>(Priorities::FileHandling_fileManager),
      static_cast<Os::Task::ParamType>(StackSizes::FileHandling_fileManager),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::FileHandling_fileManager)
    );
    FileHandling::fileUplink.start(
      static_cast<FwTaskPriorityType>(Priorities::FileHandling_fileUplink),
      static_cast<Os::Task::ParamType>(StackSizes::FileHandling_fileUplink),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::FileHandling_fileUplink)
    );
    FileHandling::prmDb.start(
      static_cast<FwTaskPriorityType>(Priorities::FileHandling_prmDb),
      static_cast<Os::Task::ParamType>(StackSizes::FileHandling_prmDb),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::FileHandling_prmDb)
    );
    Ref::blockDrv.start(
      static_cast<FwTaskPriorityType>(Priorities::Ref_blockDrv),
      static_cast<Os::Task::ParamType>(StackSizes::Ref_blockDrv),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::Ref_blockDrv)
    );
    Ref::cmdSeq.start(
      static_cast<FwTaskPriorityType>(Priorities::Ref_cmdSeq),
      static_cast<Os::Task::ParamType>(StackSizes::Ref_cmdSeq),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::Ref_cmdSeq)
    );
    Ref::dpDemo.start(
      static_cast<FwTaskPriorityType>(Priorities::Ref_dpDemo),
      static_cast<Os::Task::ParamType>(StackSizes::Ref_dpDemo),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::Ref_dpDemo)
    );
    Ref::pingRcvr.start(
      static_cast<FwTaskPriorityType>(Priorities::Ref_pingRcvr),
      static_cast<Os::Task::ParamType>(StackSizes::Ref_pingRcvr),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::Ref_pingRcvr)
    );
    Ref::rateGroup1Comp.start(
      static_cast<FwTaskPriorityType>(Priorities::Ref_rateGroup1Comp),
      static_cast<Os::Task::ParamType>(StackSizes::Ref_rateGroup1Comp),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::Ref_rateGroup1Comp)
    );
    Ref::rateGroup2Comp.start(
      static_cast<FwTaskPriorityType>(Priorities::Ref_rateGroup2Comp),
      static_cast<Os::Task::ParamType>(StackSizes::Ref_rateGroup2Comp),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::Ref_rateGroup2Comp)
    );
    Ref::rateGroup3Comp.start(
      static_cast<FwTaskPriorityType>(Priorities::Ref_rateGroup3Comp),
      static_cast<Os::Task::ParamType>(StackSizes::Ref_rateGroup3Comp),
      Os::Task::TASK_DEFAULT, // Default CPU
      static_cast<Os::Task::ParamType>(TaskIds::Ref_rateGroup3Comp)
    );
  }

  void stopTasks(const TopologyState& state) {
    CdhCore::cmdDisp.exit();
    CdhCore::events.exit();
    CdhCore::tlmSend.exit();
    ComCcsds::comQueue.exit();
    DataProducts::dpCat.exit();
    DataProducts::dpMgr.exit();
    DataProducts::dpWriter.exit();
    FileHandling::fileDownlink.exit();
    FileHandling::fileManager.exit();
    FileHandling::fileUplink.exit();
    FileHandling::prmDb.exit();
    Ref::blockDrv.exit();
    Ref::cmdSeq.exit();
    Ref::dpDemo.exit();
    Ref::pingRcvr.exit();
    Ref::rateGroup1Comp.exit();
    Ref::rateGroup2Comp.exit();
    Ref::rateGroup3Comp.exit();
  }

  void freeThreads(const TopologyState& state) {
    (void) CdhCore::cmdDisp.ActiveComponentBase::join();
    (void) CdhCore::events.ActiveComponentBase::join();
    (void) CdhCore::tlmSend.ActiveComponentBase::join();
    (void) ComCcsds::comQueue.ActiveComponentBase::join();
    (void) DataProducts::dpCat.ActiveComponentBase::join();
    (void) DataProducts::dpMgr.ActiveComponentBase::join();
    (void) DataProducts::dpWriter.ActiveComponentBase::join();
    (void) FileHandling::fileDownlink.ActiveComponentBase::join();
    (void) FileHandling::fileManager.ActiveComponentBase::join();
    (void) FileHandling::fileUplink.ActiveComponentBase::join();
    (void) FileHandling::prmDb.ActiveComponentBase::join();
    (void) Ref::blockDrv.ActiveComponentBase::join();
    (void) Ref::cmdSeq.ActiveComponentBase::join();
    (void) Ref::dpDemo.ActiveComponentBase::join();
    (void) Ref::pingRcvr.ActiveComponentBase::join();
    (void) Ref::rateGroup1Comp.ActiveComponentBase::join();
    (void) Ref::rateGroup2Comp.ActiveComponentBase::join();
    (void) Ref::rateGroup3Comp.ActiveComponentBase::join();
  }

  void tearDownComponents(const TopologyState& state) {
    ComCcsds::comQueue.cleanup();
    ComCcsds::commsBufferManager.cleanup();
    ComCcsds::frameAccumulator.cleanup();
    DataProducts::dpCat.shutdown();
    DataProducts::dpBufferManager.cleanup();
  }

  // ----------------------------------------------------------------------
  // Setup and teardown functions
  // ----------------------------------------------------------------------

  void setup(const TopologyState& state) {
    initComponents(state);
    configComponents(state);
    setBaseIds();
    connectComponents();
    regCommands();
    readParameters();
    loadParameters();
    startTasks(state);
  }

  void teardown(const TopologyState& state) {
    stopTasks(state);
    freeThreads(state);
    tearDownComponents(state);
  }

}
