// ======================================================================
// \title  SpacePacketHeaderSerializableAc.hpp
// \author Generated by fpp-to-cpp
// \brief  hpp file for SpacePacketHeader struct
// ======================================================================

#ifndef Svc_Ccsds_SpacePacketHeaderSerializableAc_HPP
#define Svc_Ccsds_SpacePacketHeaderSerializableAc_HPP

#include "Fw/FPrimeBasicTypes.hpp"
#include "Fw/Types/ExternalString.hpp"
#include "Fw/Types/Serializable.hpp"
#include "Fw/Types/String.hpp"

namespace Svc {

  namespace Ccsds {

    //! Describes the frame header format for the SpacePacket communications protocol
    class SpacePacketHeader :
      public Fw::Serializable
    {

      public:

        // ----------------------------------------------------------------------
        // Constants
        // ----------------------------------------------------------------------

        enum {
          //! The size of the serial representation
          SERIALIZED_SIZE =
            sizeof(U16) +
            sizeof(U16) +
            sizeof(U16)
        };

      public:

        // ----------------------------------------------------------------------
        // Constructors
        // ----------------------------------------------------------------------

        //! Constructor (default value)
        SpacePacketHeader();

        //! Member constructor
        SpacePacketHeader(
            U16 packetIdentification,
            U16 packetSequenceControl,
            U16 packetDataLength
        );

        //! Copy constructor
        SpacePacketHeader(
            const SpacePacketHeader& obj //!< The source object
        );

      public:

        // ----------------------------------------------------------------------
        // Operators
        // ----------------------------------------------------------------------

        //! Copy assignment operator
        SpacePacketHeader& operator=(
            const SpacePacketHeader& obj //!< The source object
        );

        //! Equality operator
        bool operator==(
            const SpacePacketHeader& obj //!< The other object
        ) const;

        //! Inequality operator
        bool operator!=(
            const SpacePacketHeader& obj //!< The other object
        ) const;

#ifdef BUILD_UT

        //! Ostream operator
        friend std::ostream& operator<<(
            std::ostream& os, //!< The ostream
            const SpacePacketHeader& obj //!< The object
        );

#endif

      public:

        // ----------------------------------------------------------------------
        // Member functions
        // ----------------------------------------------------------------------

        //! Serialization
        Fw::SerializeStatus serializeTo(
            Fw::SerializeBufferBase& buffer //!< The serial buffer
        ) const;

        //! Deserialization
        Fw::SerializeStatus deserializeFrom(
            Fw::SerializeBufferBase& buffer //!< The serial buffer
        );

        //! Get the dynamic serialized size of the struct
        FwSizeType serializedSize() const;

#if FW_SERIALIZABLE_TO_STRING

        //! Convert struct to string
        void toString(
            Fw::StringBase& sb //!< The StringBase object to hold the result
        ) const;

#endif

        // ----------------------------------------------------------------------
        // Getter functions
        // ----------------------------------------------------------------------

        //! Get member packetIdentification
        U16 get_packetIdentification() const
        {
          return this->m_packetIdentification;
        }

        //! Get member packetSequenceControl
        U16 get_packetSequenceControl() const
        {
          return this->m_packetSequenceControl;
        }

        //! Get member packetDataLength
        U16 get_packetDataLength() const
        {
          return this->m_packetDataLength;
        }

        // ----------------------------------------------------------------------
        // Setter functions
        // ----------------------------------------------------------------------

        //! Set all members
        void set(
            U16 packetIdentification,
            U16 packetSequenceControl,
            U16 packetDataLength
        );

        //! Set member packetIdentification
        void set_packetIdentification(U16 packetIdentification);

        //! Set member packetSequenceControl
        void set_packetSequenceControl(U16 packetSequenceControl);

        //! Set member packetDataLength
        void set_packetDataLength(U16 packetDataLength);

      protected:

        // ----------------------------------------------------------------------
        // Member variables
        // ----------------------------------------------------------------------

        U16 m_packetIdentification;
        U16 m_packetSequenceControl;
        U16 m_packetDataLength;

    };

  }

}

#endif
