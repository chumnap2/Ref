// ======================================================================
// \title  TMTrailerSerializableAc.hpp
// \author Generated by fpp-to-cpp
// \brief  hpp file for TMTrailer struct
// ======================================================================

#ifndef Svc_Ccsds_TMTrailerSerializableAc_HPP
#define Svc_Ccsds_TMTrailerSerializableAc_HPP

#include "Fw/FPrimeBasicTypes.hpp"
#include "Fw/Types/ExternalString.hpp"
#include "Fw/Types/Serializable.hpp"
#include "Fw/Types/String.hpp"

namespace Svc {

  namespace Ccsds {

    //! Describes the frame trailer format for a Telemetry (TM) Transfer Frame
    class TMTrailer :
      public Fw::Serializable
    {

      public:

        // ----------------------------------------------------------------------
        // Constants
        // ----------------------------------------------------------------------

        enum {
          //! The size of the serial representation
          SERIALIZED_SIZE =
            sizeof(U16)
        };

      public:

        // ----------------------------------------------------------------------
        // Constructors
        // ----------------------------------------------------------------------

        //! Constructor (default value)
        TMTrailer();

        //! Member constructor
        TMTrailer(U16 fecf);

        //! Copy constructor
        TMTrailer(
            const TMTrailer& obj //!< The source object
        );

      public:

        // ----------------------------------------------------------------------
        // Operators
        // ----------------------------------------------------------------------

        //! Copy assignment operator
        TMTrailer& operator=(
            const TMTrailer& obj //!< The source object
        );

        //! Equality operator
        bool operator==(
            const TMTrailer& obj //!< The other object
        ) const;

        //! Inequality operator
        bool operator!=(
            const TMTrailer& obj //!< The other object
        ) const;

#ifdef BUILD_UT

        //! Ostream operator
        friend std::ostream& operator<<(
            std::ostream& os, //!< The ostream
            const TMTrailer& obj //!< The object
        );

#endif

      public:

        // ----------------------------------------------------------------------
        // Member functions
        // ----------------------------------------------------------------------

        //! Serialization
        Fw::SerializeStatus serializeTo(
            Fw::SerializeBufferBase& buffer //!< The serial buffer
        ) const;

        //! Deserialization
        Fw::SerializeStatus deserializeFrom(
            Fw::SerializeBufferBase& buffer //!< The serial buffer
        );

        //! Get the dynamic serialized size of the struct
        FwSizeType serializedSize() const;

#if FW_SERIALIZABLE_TO_STRING

        //! Convert struct to string
        void toString(
            Fw::StringBase& sb //!< The StringBase object to hold the result
        ) const;

#endif

        // ----------------------------------------------------------------------
        // Getter functions
        // ----------------------------------------------------------------------

        //! Get member fecf
        U16 get_fecf() const
        {
          return this->m_fecf;
        }

        // ----------------------------------------------------------------------
        // Setter functions
        // ----------------------------------------------------------------------

        //! Set all members
        void set(U16 fecf);

        //! Set member fecf
        void set_fecf(U16 fecf);

      protected:

        // ----------------------------------------------------------------------
        // Member variables
        // ----------------------------------------------------------------------

        U16 m_fecf;

    };

  }

}

#endif
