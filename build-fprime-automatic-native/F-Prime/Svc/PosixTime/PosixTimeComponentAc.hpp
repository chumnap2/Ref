// ======================================================================
// \title  PosixTimeComponentAc.hpp
// \author Generated by fpp-to-cpp
// \brief  hpp file for PosixTime component base class
// ======================================================================

#ifndef Svc_PosixTimeComponentAc_HPP
#define Svc_PosixTimeComponentAc_HPP

#include "Fw/Comp/ActiveComponentBase.hpp"
#include "Fw/FPrimeBasicTypes.hpp"
#include "Fw/Port/InputSerializePort.hpp"
#include "Fw/Port/OutputSerializePort.hpp"
#include "Fw/Time/TimePortAc.hpp"

namespace Svc {

  //! \class PosixTimeComponentBase
  //! \brief Auto-generated base for PosixTime component
  //!
  //! A component for getting time
  class PosixTimeComponentBase :
    public Fw::PassiveComponentBase
  {

      // ----------------------------------------------------------------------
      // Friend classes
      // ----------------------------------------------------------------------

      //! Friend class tester to support autocoded test harness
      friend class PosixTimeTesterBase;
      //! Friend class tester implementation to support white-box testing
      friend class PosixTimeTester;

    protected:

      // ----------------------------------------------------------------------
      // Constants
      // ----------------------------------------------------------------------

      //! Enumerations for numbers of typed input ports
      enum {
        NUM_TIMEGETPORT_INPUT_PORTS = 1,
      };

    public:

      // ----------------------------------------------------------------------
      // Component initialization
      // ----------------------------------------------------------------------

      //! Initialize PosixTimeComponentBase object
      void init(
          FwEnumStoreType instance = 0 //!< The instance number
      );

    public:

      // ----------------------------------------------------------------------
      // Getters for typed input ports
      // ----------------------------------------------------------------------

      //! Get typed input port at index
      //!
      //! \return timeGetPort[portNum]
      Fw::InputTimePort* get_timeGetPort_InputPort(
          FwIndexType portNum //!< The port number
      );

    protected:

      // ----------------------------------------------------------------------
      // Component construction and destruction
      // ----------------------------------------------------------------------

      //! Construct PosixTimeComponentBase object
      PosixTimeComponentBase(
          const char* compName = "" //!< The component name
      );

      //! Destroy PosixTimeComponentBase object
      virtual ~PosixTimeComponentBase();

    protected:

      // ----------------------------------------------------------------------
      // Getters for numbers of typed input ports
      // ----------------------------------------------------------------------

      //! Get the number of timeGetPort input ports
      //!
      //! \return The number of timeGetPort input ports
      FwIndexType getNum_timeGetPort_InputPorts() const;

    protected:

      // ----------------------------------------------------------------------
      // Handlers to implement for typed input ports
      // ----------------------------------------------------------------------

      //! Handler for input port timeGetPort
      virtual void timeGetPort_handler(
          FwIndexType portNum, //!< The port number
          Fw::Time& time //!< Reference to Time object
      ) = 0;

    protected:

      // ----------------------------------------------------------------------
      // Port handler base-class functions for typed input ports
      //
      // Call these functions directly to bypass the corresponding ports
      // ----------------------------------------------------------------------

      //! Handler base-class function for input port timeGetPort
      void timeGetPort_handlerBase(
          FwIndexType portNum, //!< The port number
          Fw::Time& time //!< Reference to Time object
      );

    private:

      // ----------------------------------------------------------------------
      // Calls for messages received on typed input ports
      // ----------------------------------------------------------------------

      //! Callback for port timeGetPort
      static void m_p_timeGetPort_in(
          Fw::PassiveComponentBase* callComp, //!< The component instance
          FwIndexType portNum, //!< The port number
          Fw::Time& time //!< Reference to Time object
      );

    private:

      // ----------------------------------------------------------------------
      // Typed input ports
      // ----------------------------------------------------------------------

      //! Input port timeGetPort
      Fw::InputTimePort m_timeGetPort_InputPort[NUM_TIMEGETPORT_INPUT_PORTS];

  };

}

#endif
