// ======================================================================
// \title  TlmGetPortAc.hpp
// \author Generated by fpp-to-cpp
// \brief  hpp file for TlmGet port
// ======================================================================

#ifndef Fw_TlmGetPortAc_HPP
#define Fw_TlmGetPortAc_HPP

#include <cstdio>
#include <cstring>

#include "Fw/Comp/PassiveComponentBase.hpp"
#include "Fw/FPrimeBasicTypes.hpp"
#include "Fw/Port/InputPortBase.hpp"
#include "Fw/Port/OutputPortBase.hpp"
#include "Fw/Time/Time.hpp"
#include "Fw/Tlm/TlmBuffer.hpp"
#include "Fw/Tlm/TlmValidEnumAc.hpp"
#include "Fw/Types/String.hpp"
#include "default/config/FwChanIdTypeAliasAc.hpp"

namespace Fw {

  //! Input TlmGet port
  //! Port for getting telemetry
  class InputTlmGetPort :
    public Fw::InputPortBase
  {

    public:

      // ----------------------------------------------------------------------
      // Constants
      // ----------------------------------------------------------------------

      enum {
        //! The size of the serial representations of the port arguments
        SERIALIZED_SIZE =
          sizeof(FwChanIdType) +
          Fw::Time::SERIALIZED_SIZE +
          Fw::TlmBuffer::SERIALIZED_SIZE
      };

    public:

      // ----------------------------------------------------------------------
      // Types
      // ----------------------------------------------------------------------

      //! The port callback function type
      typedef Fw::TlmValid (*CompFuncPtr)(
        Fw::PassiveComponentBase* callComp,
        FwIndexType portNum,
        FwChanIdType id,
        Fw::Time& timeTag,
        Fw::TlmBuffer& val
      );

    public:

      // ----------------------------------------------------------------------
      // Input Port Member functions
      // ----------------------------------------------------------------------

      //! Constructor
      InputTlmGetPort();

      //! Initialization function
      void init();

      //! Register a component
      void addCallComp(
          Fw::PassiveComponentBase* callComp, //!< The containing component
          CompFuncPtr funcPtr //!< The port callback function
      );

      //! Invoke a port interface
      Fw::TlmValid invoke(
          FwChanIdType id, //!< Telemetry Channel ID
          Fw::Time& timeTag, //!< Time Tag
          Fw::TlmBuffer& val //!< Buffer containing serialized telemetry value.
                             //!< Size set to 0 if channel not found, or if no value
                             //!< has been received for this channel yet.
      );

    private:

#if FW_PORT_SERIALIZATION == 1

      //! Invoke the port with serialized arguments
      Fw::SerializeStatus invokeSerial(Fw::SerializeBufferBase& _buffer);

#endif

    private:

      // ----------------------------------------------------------------------
      // Member variables
      // ----------------------------------------------------------------------

      //! The pointer to the port callback function
      CompFuncPtr m_func;

  };

  //! Output TlmGet port
  //! Port for getting telemetry
  class OutputTlmGetPort :
    public Fw::OutputPortBase
  {

    public:

      // ----------------------------------------------------------------------
      // Output Port Member functions
      // ----------------------------------------------------------------------

      //! Constructor
      OutputTlmGetPort();

      //! Initialization function
      void init();

      //! Register an input port
      void addCallPort(
          InputTlmGetPort* callPort //!< The input port
      );

      //! Invoke a port interface
      Fw::TlmValid invoke(
          FwChanIdType id, //!< Telemetry Channel ID
          Fw::Time& timeTag, //!< Time Tag
          Fw::TlmBuffer& val //!< Buffer containing serialized telemetry value.
                             //!< Size set to 0 if channel not found, or if no value
                             //!< has been received for this channel yet.
      ) const;

    private:

      // ----------------------------------------------------------------------
      // Member variables
      // ----------------------------------------------------------------------

      //! The pointer to the input port
      InputTlmGetPort* m_port;

  };

}

#endif
