// ======================================================================
// \title  FrameContextSerializableAc.hpp
// \author Generated by fpp-to-cpp
// \brief  hpp file for FrameContext struct
// ======================================================================

#ifndef ComCfg_FrameContextSerializableAc_HPP
#define ComCfg_FrameContextSerializableAc_HPP

#include "Fw/FPrimeBasicTypes.hpp"
#include "Fw/Types/ExternalString.hpp"
#include "Fw/Types/Serializable.hpp"
#include "Fw/Types/String.hpp"
#include "default/config/APIDEnumAc.hpp"
#include "default/config/FwIndexTypeAliasAc.hpp"

namespace ComCfg {

  //! Type used to pass context info between components during framing/deframing
  class FrameContext :
    public Fw::Serializable
  {

    public:

      // ----------------------------------------------------------------------
      // Constants
      // ----------------------------------------------------------------------

      enum {
        //! The size of the serial representation
        SERIALIZED_SIZE =
          sizeof(FwIndexType) +
          ComCfg::APID::SERIALIZED_SIZE +
          sizeof(U16) +
          sizeof(U8)
      };

    public:

      // ----------------------------------------------------------------------
      // Constructors
      // ----------------------------------------------------------------------

      //! Constructor (default value)
      FrameContext();

      //! Member constructor
      FrameContext(
          FwIndexType comQueueIndex,
          ComCfg::APID::T apid,
          U16 sequenceCount,
          U8 vcId
      );

      //! Copy constructor
      FrameContext(
          const FrameContext& obj //!< The source object
      );

    public:

      // ----------------------------------------------------------------------
      // Operators
      // ----------------------------------------------------------------------

      //! Copy assignment operator
      FrameContext& operator=(
          const FrameContext& obj //!< The source object
      );

      //! Equality operator
      bool operator==(
          const FrameContext& obj //!< The other object
      ) const;

      //! Inequality operator
      bool operator!=(
          const FrameContext& obj //!< The other object
      ) const;

#ifdef BUILD_UT

      //! Ostream operator
      friend std::ostream& operator<<(
          std::ostream& os, //!< The ostream
          const FrameContext& obj //!< The object
      );

#endif

    public:

      // ----------------------------------------------------------------------
      // Member functions
      // ----------------------------------------------------------------------

      //! Serialization
      Fw::SerializeStatus serializeTo(
          Fw::SerializeBufferBase& buffer //!< The serial buffer
      ) const;

      //! Deserialization
      Fw::SerializeStatus deserializeFrom(
          Fw::SerializeBufferBase& buffer //!< The serial buffer
      );

      //! Get the dynamic serialized size of the struct
      FwSizeType serializedSize() const;

#if FW_SERIALIZABLE_TO_STRING

      //! Convert struct to string
      void toString(
          Fw::StringBase& sb //!< The StringBase object to hold the result
      ) const;

#endif

      // ----------------------------------------------------------------------
      // Getter functions
      // ----------------------------------------------------------------------

      //! Get member comQueueIndex
      FwIndexType get_comQueueIndex() const
      {
        return this->m_comQueueIndex;
      }

      //! Get member apid
      ComCfg::APID::T get_apid() const
      {
        return this->m_apid.e;
      }

      //! Get member sequenceCount
      U16 get_sequenceCount() const
      {
        return this->m_sequenceCount;
      }

      //! Get member vcId
      U8 get_vcId() const
      {
        return this->m_vcId;
      }

      // ----------------------------------------------------------------------
      // Setter functions
      // ----------------------------------------------------------------------

      //! Set all members
      void set(
          FwIndexType comQueueIndex,
          ComCfg::APID::T apid,
          U16 sequenceCount,
          U8 vcId
      );

      //! Set member comQueueIndex
      void set_comQueueIndex(FwIndexType comQueueIndex);

      //! Set member apid
      void set_apid(ComCfg::APID::T apid);

      //! Set member sequenceCount
      void set_sequenceCount(U16 sequenceCount);

      //! Set member vcId
      void set_vcId(U8 vcId);

    protected:

      // ----------------------------------------------------------------------
      // Member variables
      // ----------------------------------------------------------------------

      FwIndexType m_comQueueIndex;
      ComCfg::APID m_apid;
      U16 m_sequenceCount;
      U8 m_vcId;

  };

}

#endif
